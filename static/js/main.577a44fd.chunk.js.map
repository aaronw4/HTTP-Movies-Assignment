{"version":3,"sources":["Movies/SavedList.js","Movies/MovieCard.js","Movies/MovieList.js","Movies/Movie.js","Movies/Update.js","App.js","index.js"],"names":["SavedList","className","this","props","list","map","movie","to","id","key","activeClassName","title","Component","MovieCard","director","metascore","starsList","stars","split","star","MovieList","state","movies","axios","get","then","res","setState","data","catch","err","console","log","response","MovieDetails","Movie","fetchMovie","saveMovie","addToSavedList","match","params","newProps","onClick","React","Update","handleTitle","e","target","value","handleDirector","handleMetascore","handleSubmit","preventDefault","put","window","location","replace","onSubmit","type","name","onChange","App","useState","savedList","setSavedList","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.577a44fd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nexport default class SavedList extends Component {\r\n \r\n  render() {\r\n    return (\r\n      <div className=\"saved-list\">\r\n        <h3>Saved Movies:</h3>\r\n        {this.props.list.map(movie => {\r\n          return (\r\n            <NavLink\r\n              to={`/movies/${movie.id}`}\r\n              key={movie.id}\r\n              activeClassName=\"saved-active\"\r\n            >\r\n              <span className=\"saved-movie\">{movie.title}</span>\r\n            </NavLink>\r\n          );\r\n        })}\r\n        <div className=\"home-button\">\r\n          <Link to=\"HTTP-Movies-Assignment/\">Home</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst MovieCard = props => {\r\n  const { title, director, metascore, stars } = props.movie;\r\n  let starsList = stars.split(',')\r\n  \r\n  return (\r\n    <div className=\"movie-card\">\r\n      <h2>{title}</h2>\r\n      <div className=\"movie-director\">\r\n        Director: <em>{director}</em>\r\n      </div>\r\n      <div className=\"movie-metascore\">\r\n        Metascore: <strong>{metascore}</strong>\r\n      </div>\r\n      <h3>Actors</h3>\r\n\r\n      {starsList.map(star => (\r\n        <div key={star} className=\"movie-star\">\r\n          {star}\r\n        </div>\r\n      ))}\r\n      <div>\r\n        <Link to={`HTTP-Movies-Assignment/update-movie/${props.movie.id}`}>\r\n          <button className='edit-button'>Edit</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MovieCard from \"./MovieCard\";\r\nexport default class MovieList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movies: []\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://arw-movie-database.herokuapp.com/api/movies/\")\r\n      .then(res => this.setState({ movies: res.data }))\r\n      .catch(err => console.log(err.response));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"movie-list\">\r\n        {this.state.movies.map(movie => (\r\n          <MovieDetails key={movie.id} movie={movie} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction MovieDetails({ movie }) {\r\n  return (\r\n    <Link to={`HTTP-Movies-Assignment/movies/${movie.id}`}>\r\n      <MovieCard movie={movie} />\r\n    </Link>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nexport default class Movie extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movie: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchMovie(this.props.match.params.id);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (this.props.match.params.id !== newProps.match.params.id) {\r\n      this.fetchMovie(newProps.match.params.id);\r\n    }\r\n  }\r\n\r\n  fetchMovie = id => {\r\n    axios\r\n      .get(`https://arw-movie-database.herokuapp.com/api/movies/${id}`)\r\n      .then(res => this.setState({ movie: res.data[0] }))\r\n      .catch(err => console.log(err.response));\r\n  };\r\n\r\n  saveMovie = () => {\r\n    const addToSavedList = this.props.addToSavedList;\r\n    addToSavedList(this.state.movie);\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.movie) {\r\n      return <div>Loading movie information...</div>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"save-wrapper\">\r\n        <MovieCard movie={this.state.movie} />\r\n        <div className=\"save-button\" onClick={this.saveMovie}>\r\n          Save\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Update extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id:'',\r\n            title: '',\r\n            director: '',\r\n            metascore: '',\r\n            stars: []\r\n        };\r\n    }\r\n\r\n    handleTitle = e => {\r\n        this.setState({title: e.target.value})\r\n    }\r\n\r\n    handleDirector = e => {\r\n        this.setState({director: e.target.value})\r\n    }\r\n\r\n    handleMetascore = e => {\r\n        this.setState({metascore: e.target.value})\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        let movie = {\r\n            id: this.props.match.params.id,\r\n            title: this.state.title,\r\n            director: this.state.director,\r\n            metascore: this.state.metascore,\r\n            stars: this.state.stars\r\n        }\r\n        console.log(movie)\r\n        axios\r\n            .put(`https://arw-movie-database.herokuapp.com/api/movies/${this.props.match.params.id}`, movie)\r\n            .then(res => {\r\n                window.location.replace(`/movies/${this.props.match.params.id}`)\r\n                console.log(res.data)\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .get(`https://arw-movie-database.herokuapp.com/api/movies/${this.props.match.params.id}`)\r\n            .then(res => {\r\n                this.setState({id: res.data[0].id});\r\n                this.setState({title: res.data[0].title});\r\n                this.setState({director: res.data[0].director});\r\n                this.setState({metascore: res.data[0].metascore});\r\n                this.setState({stars: res.data[0].stars});\r\n                console.log(res.data[0])\r\n            })\r\n            .catch(err => console.log(err.response));\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state)\r\n        if (!this.state) {\r\n            return <div>Loading....</div>;\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                <h1>Edit Movie Information</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <span>Title: </span>\r\n                    <input\r\n                        type='text'\r\n                        name='title'\r\n                        value={this.state.title}\r\n                        onChange={this.handleTitle}\r\n                    />\r\n                    <br/>\r\n                    <span>Director: </span>\r\n                    <input\r\n                        type='text'\r\n                        name='director'\r\n                        value={this.state.director}\r\n                        onChange={this.handleDirector}\r\n                    />\r\n                    <br/>\r\n                    <span>Metascore: </span>\r\n                    <input\r\n                        type='text'\r\n                        name='metascore'\r\n                        value={this.state.metascore}\r\n                        onChange={this.handleMetascore}\r\n                    />\r\n                    <div>\r\n                        <button>Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport SavedList from \"./Movies/SavedList\";\r\nimport MovieList from \"./Movies/MovieList\";\r\nimport Movie from \"./Movies/Movie\";\r\nimport Update from './Movies/Update';\r\n\r\nconst App = () => {\r\n  const [savedList, setSavedList] = useState([]);\r\n\r\n  const addToSavedList = movie => {\r\n    setSavedList([...savedList, movie]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SavedList list={savedList} />\r\n      <Route exact path=\"HTTP-Movies-Assignment/\" component={MovieList} />\r\n      <Route\r\n        path=\"HTTP-Movies-Assignment/movies/:id\"\r\n        render={props => {\r\n          return <Movie {...props} addToSavedList={addToSavedList} />;\r\n        }}\r\n      />\r\n      <Route \r\n        path='HTTP-Movies-Assignment/update-movie/:id' \r\n        render={props => {\r\n          return <Update {...props} />\r\n        }} \r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App'\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}